
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// ++ Столярова М.Ю. EDT
	//
	////КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	ОбщаяСкидка = ТекущиеДанные.Скидка + Объект.Доп_СогласованнаяСкидка;
	Если ОбщаяСкидка <= 100 Тогда
		КоэффициентСкидки = 1 - ОбщаяСкидка / 100;
	Иначе
		КоэффициентСкидки = 0; 
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Суммарная скидка у %1 равна %2%%, что превышает 100%%", ТекущиеДанные.Номенклатура, ОбщаяСкидка);  	 
		Сообщение.Сообщить();	
	КонецЕсли;	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	РассчитатьСуммуДокумента();
	// -- Столярова М.Ю. EDT
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура Доп_СогласованнаяСкидкаПриИзменении(Элемент) 
	
	// ++ Столярова М.Ю. EDT
	ТоварыИУслугиЗаполнены = Объект.Товары.Количество() ИЛИ Объект.Услуги.Количество();	
	Если ТоварыИУслугиЗаполнены Тогда 
		Доп_СогласованнаяСкидкаПриИзмененииАсинх(); 
	КонецЕсли;	
	// -- Столярова М.Ю. EDT
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура Доп_СогласованнаяСкидкаПриИзмененииАсинх()   
	
	// ++ Столярова М.Ю. EDT
	Ответ = Ждать ВопросАсинх(НСтр("ru='Пересчитать данные в документе с учетом введенной скидки?'"), РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);	
	Если Ответ = КодВозвратаДиалога.Да Тогда		
		Доп_ПересчитатьТабличныеЧастиДокумента(); 	
	КонецЕсли;
	// -- Столярова М.Ю. EDT   
	
КонецПроцедуры   

&НаКлиенте
Процедура Доп_ПересчитатьТабличныеЧастиДокумента() 
	
	// ++ Столярова М.Ю. EDT
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл 		
		РассчитатьСуммуСтроки(СтрокаТЧ);			
	КонецЦикла; 
	Для Каждого СтрокаТЧ Из Объект.Услуги Цикл 		
		РассчитатьСуммуСтроки(СтрокаТЧ);			
	КонецЦикла;
	// -- Столярова М.Ю. EDT 
	
КонецПроцедуры  

&НаКлиенте
Процедура Доп_ПересчитатьТабличныеЧасти(Команда)  
	
	// ++ Столярова М.Ю. EDT
	Доп_ПересчитатьТабличныеЧастиДокумента();
	// -- Столярова М.Ю. EDT  
	
КонецПроцедуры 

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
